export const URLS = {
    login: 'api/auth/login',
    signUp: 'auth/signup',
    getMe: 'api/auth/get-me',
    regions: 'api/references/region',
    insuranceForm: 'api/references/insurance-form',
    districts: 'api/references/district',
    branches: 'branches',
    objectType: 'api/references/insurance-object-type',
    object: 'api/references/insurance-object',
    policyType: 'api/references/policy-type',
    riskType: 'api/references/risk-type',
    risk: 'api/references/risk',
    role: 'role',
    insuranceClass: 'api/references/insurance-class',
    subclasses: 'subclasses',
    sectorType: 'api/references/sector-type',
    policyFormat: 'api/references/policy-format',
    groupsofproducts: 'api/product/group',
    subgroupsofproducts: 'api/product/subgroup',
    applicationForm: 'api/references/application-form',
    contractForm: 'api/references/contract-form',
    additionaldocuments: 'api/references/additional-documents',
    claimSettlement: 'api/references/claim-settlement',
    typeofrefund: 'api/references/refund-type',
    typeoffranchise: 'api/references/franchise-type',
    products: 'api/product/list',
    personType: 'api/references/person-type',
    statusofproduct: 'statusofproduct',
    agents: 'agents',
    typeofpayment: 'api/references/payment-type',
    baseoffranchise: 'api/references/franchise-base',
    subgroupsofproductsFilter: 'api/product/subgroup/list',
    riskFilter: 'risk',
    tengebankContracts: 'integ/tengebank/contracts',
    translations: 'api/references/translation',
    accountroles: 'accountroles',
    accountstatus: 'accountstatus',
    typeofagent: 'typeofagent',
    citizenship: 'citizenship',
    genders: 'api/references/gender',
    position: 'position',
    typeofdocuments: 'typeofdocuments',
    levelofbranch: 'api/branch/level',
    branchStatus: 'api/branch/status',
    typeofdocumentsformanager: 'typeofdocumentsformanager',
    reasons: 'api/references/reason',
    agreements: 'agreements',
    endorsementType: 'api/references/endorsement-type',
    endorsementStatus: 'api/references/endorsement-status',
    fieldofendorsements: 'fieldofendorsements',
    productsfilter: 'products',
    agentsfilter: 'agreements/agentsfilter',
    paymentCurrency: 'api/references/payment-currency',
    districtsByRegion: 'districts/reg',
    objectFilterByType: 'object/type',
    policy: 'policy',
    bcoPolicyStatus: 'api/bco/policy-status',
    paymentStatus: 'api/references/payment-status',
    endorsements: 'endorsements',
    policyFilter: 'policy',
    endorsementFilter: 'endorsements/f',
    transactions: 'transactions',
    transactionlog: 'transactionlog',
    transactionExcel: 'transactionlog/f/exel',
    typeofdistribute: 'typeofdistribute',
    statusbcopolicy: 'statusbcopolicy',
    actstatus: 'actstatus',
    acts: 'acts',
    bco: 'bco',
    typeofbco: 'typeofbco',
    languagepolicy: 'languagepolicy',
    warehouse: 'warehouse',
    user: 'user',
    clients: 'api/client',
    policyblank: 'policyblank',
    statusoftypebco: 'statusoftypebco',
    checkBlank: 'acts/f/cheakblank',
    clientsFind: 'clients/f/inn',
    employee: 'employee',
    objectFields: 'typeofobject/inputs',
    sendToFond: 'agreements/send',
    orgInfo: 'provider/orginfo',
    personalInfo: 'provider/personalinfo',
    transactionAgreements: 'transactions/agreements',
    transactionPolicies: 'transactions/policies',
    transactionAttach: 'transactions/attach',
    transactionDistribute: 'transactions/distribute',
    ownershipForms: 'api/references/ownership-form',
    organizationInfoProvider:'api/provider/organization-info',
    personalInfoProvider:'api/provider/personal-info',
    residentTypes:'api/references/resident-type',
    countries:'api/references/country',
    areaTypes:'api/references/country',
    okeds:'api/references/okeds',
}